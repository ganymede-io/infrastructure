---
## Manages stats configuration
- name: Validate stats configuration
  hosts: stats
  become: true
  tasks:
    - name: Ensure zfs_disk_1 and zfs_disk_2 are set
      assert:
        that: >-
          zfs_disk_1 is defined and zfs_disk_1 != "" and zfs_disk_2 is defined and zfs_disk_2 != ""
        msg: "Must set zfs_disk_1 and zfs_disk_2. This is usually done automatically with Terraform"

    - name: Ensure callysto_ssl_cert_dir is set
      assert:
        that: >-
          callysto_ssl_cert_dir != ""
        msg: "Must set callysto_ssl_cert_dir"

    - name: Ensure either zfs_pool_name or docker_zfs_pool is set
      assert:
        that: >-
          zfs_pool_name is defined or docker_zfs_pool is defined
        msg: "Must set either zfs_pool_name or docker_zfs_pool"

- name: Ensure sudo is configured correctly
  hosts: stats
  become: true
  tasks:
    # Settings are defined in
    # group_vars/<group>/sudo.yml
    - name: Configure sudo
      tags: ["sudo", "always"]
      include_role:
        name: sudo
      vars:
          ansible_ssh_pipelining: no

- name: Install and configure the hostname
  hosts: stats
  become: true
  tasks:
    - name: Ensure hostname is set
      tags: ["hostname"]
      include_role:
        name: hostname

    # Add relevant keys to `ssh_public_keys`
    # in either host_vars, group_vars, or local_vars.
    - name: Manage SSH public keys
      tags: ["ssh"]
      include_role:
        name: ssh-public-keys

    # This also installs EPEL
    - name: Ensure base packages are installed
      tags: ["base-packages"]
      include_role:
        name: base-packages

    - name: Configure SELinux
      tags: ["selinux"]
      include_role:
        name: selinux
      vars:
        selinux_policy: targeted
        selinux_state: permissive

    # This will create and manage a zpool based on
    # `zfs_disk_1` and `zfs_disk_2` defined in local_vars.yml.
    - name: Manage ZFS
      tags: ["zfs"]
      include_role:
        name: zfs

    # Enabled services are defined in
    # group_vars/hub/firewalld.yml
    - name: Ensure firewalld service is running
      tags: ["firewalld"]
      include_role:
        name: firewalld
      vars:
        firewalld_allow_services:
            - { service: 'http' }
            - { service: 'https' }

    # Configuration is stored in
    # group_vars/<group>/ssh.yml.
    - name: Ensure sshd is installed and running
      tags: ["sshd"]
      include_role:
        name: sshd

    - name: Create Letsencrypt folder
      tags: ["nginx"]
      file:
        path: /etc/letsencrypt/live/{{ ansible_nodename }}
        state: directory

    - name: Copy the SSL certificates
      tags: ["nginx"]
      copy:
        src: '{{ item.src }}'
        dest: '{{ item.dest }}'
        mode: u=rw,g=r,o-rwx
      with_items:
        - src: '{{ callysto_ssl_cert_dir }}/fullchain.pem'
          dest: '/etc/letsencrypt/live/{{ ansible_nodename }}/fullchain.pem'
        - src: '{{ callysto_ssl_cert_dir }}/privkey.pem'
          dest: '/etc/letsencrypt/live/{{ ansible_nodename }}/privkey.pem'

    - name: Write ffdhe4096 DH parameter for SSL forward secrecy
      tags: ["nginx"]
      copy: content="{{ ffdhe4096 }}" dest=/etc/ssl/ffdhe4096.pem
      vars:
        #https://wiki.mozilla.org/Security/Server_Side_TLS#ffdhe4096
        ffdhe4096: |
          -----BEGIN DH PARAMETERS-----
          MIICCAKCAgEA//////////+t+FRYortKmq/cViAnPTzx2LnFg84tNpWp4TZBFGQz
          +8yTnc4kmz75fS/jY2MMddj2gbICrsRhetPfHtXV/WVhJDP1H18GbtCFY2VVPe0a
          87VXE15/V8k1mE8McODmi3fipona8+/och3xWKE2rec1MKzKT0g6eXq8CrGCsyT7
          YdEIqUuyyOP7uWrat2DX9GgdT0Kj3jlN9K5W7edjcrsZCwenyO4KbXCeAvzhzffi
          7MA0BM0oNC9hkXL+nOmFg/+OTxIy7vKBg8P+OxtMb61zO7X8vC7CIAXFjvGDfRaD
          ssbzSibBsu/6iGtCOGEfz9zeNVs7ZRkDW7w09N75nAI4YbRvydbmyQd62R0mkff3
          7lmMsPrBhtkcrv4TCYUTknC0EwyTvEN5RPT9RFLi103TZPLiHnH1S/9croKrnJ32
          nuhtK8UiNjoNq8Uhl5sN6todv5pC1cRITgq80Gv6U93vPBsg7j/VnXwl5B0rZp4e
          8W5vUsMWTfT7eTDp5OWIV7asfV9C1p9tGHdjzx1VA0AEh/VbpX4xzHpxNciG77Qx
          iu1qHgEtnmgyqQdgCpGBMMRtx3j5ca0AOAkpmaMzy4t6Gh25PXFAADwqTs6p+Y0K
          zAqCkc3OyX3Pjsm1Wn+IpGtNtahR9EGC4caKAH5eZV9q//////////8CAQI=
          -----END DH PARAMETERS-----

    - name: Manage Nginx
      tags: ["nginx"]
      include_role:
        name: nginx
      vars:
        nginx_http_template_enable: true
        nginx_http_template:
          default:
            template_file: './../../internal/stats/templates/nginx_default.conf.j2'
            conf_file_name: default.conf
            conf_file_location: /etc/nginx/conf.d/
            ipv6_address: '[::]'
            port: 443
            server_name: "{{ ansible_nodename }}"
            error_page: /usr/share/nginx/html
            autoindex: false
            ssl:
              cert: '/etc/letsencrypt/live/{{ ansible_nodename }}/fullchain.pem'
              key: '/etc/letsencrypt/live/{{ ansible_nodename }}/privkey.pem'
              dhparam: '/etc/ssl/ffdhe4096.pem'
              protocols: TLSv1.3 TLSv1.2
              ciphers: EECDH+ECDSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:RSA+AESGCM:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS
              session_cache: 'shared:TLS:2m'
              buffer_size: '4k'
              session_timeout: '5m'
              stapling: 'on'
              stapling_verify: 'on'
            #resolver: 1.1.1.1 1.0.0.1 [2606:4700:4700::1111] [2606:4700:4700::1001]
            reverse_proxy:
              locations:
                backend:
                  location: /grafana/
                  proxy_pass: http://localhost:3000/
                prometheus:
                  location: /prometheus/
                  proxy_pass: http://localhost:9090
                cadvisor:
                  location: /metrics/cadvisor/metrics
                  proxy_pass: http://localhost:8080/metrics
                pnode:
                  location: /metrics/node/metrics
                  proxy_pass: http://localhost:9100/metrics

    - name: Manage Python3
      tags: ["python", "python3"]
      include_role:
        name: ius-python3

    # Manage Docker
    - name: Manage Docker
      include_role:
        name: docker

    - name: Add interfaces their respective zones
      firewalld:
        interface: '{{ item.interface }}'
        zone: '{{ item.zone }}'
        state: enabled
        permanent: true
        immediate: yes
      with_items:
        - { interface: '{{ docker_interface }}', zone: 'home' }
      notify:
        firewalld complete reload

    - name: update facts if docker0 is not defined
      action: setup filter="ansible_docker0"
      when: ansible_docker0 is not defined

    - name: Install docker module
      yum:
        name: 'python-docker-py'
        state: 'present'

    - name: Manage Docker storage
      tags: ["docker-storage"]
      include_role:
       name: docker-storage

    - name: Prometheus node-exporter
      tags: ["stats","prometheus"]
      include_role:
        name: prometheus-node-exporter
      vars:
        prometheus_node_exporter_config_flags:
           'web.listen-address': '127.0.0.1:9100'
           'log.level': 'info'

    - name: Add file_sd_config from node to stats server
      tags: ["stats","prometheus"]
      include_role:
        name: stats

    - name: cAdvisor container
      tags: ["stats","prometheus"]
      include_role:
        name: prometheus-cadvisor
      vars:
        prometheus_exporters_common_conf_dir: "/etc/prometheus/exporters"
        prometheus_exporters_common_sd_conf_dir: '{{ prometheus_exporters_common_conf_dir }}'
        prometheus_exporters_common_local_sd_conf_dir: './../roles/internal/stats/files/stats_sd_conf'

    - name: Manage prometheus
      tags: ["stats","prometheus-server"]
      include_role:
        name: prometheus
      vars:
        prometheus_alertmanager_url: 'localhost:9093'
        prometheus_tgroups_src_dir: './../roles/internal/stats/files/stats_sd_conf'
        prometheus_web_external_url: 'https://{{ ansible_nodename }}/prometheus/'
        prometheus_config_flags_extra:
          '--web.route-prefix': '/prometheus/'

    - name: Manage grafana
      tags: ["stats","grafana"]
      include_role:
        name: grafana
      vars:
        grafana_network: "stats_network"
        grafana_domain: "{{ ansible_nodename }}"
        grafana_root_url: "https://{{ ansible_nodename }}/grafana/"
